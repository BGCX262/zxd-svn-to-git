<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:db="http://www.springframework.net/database"
         xmlns:aop="http://www.springframework.net/aop"
         xmlns:tx="http://www.springframework.net/tx" default-autowire="constructor">

  <object name="appConfigPropertyHolder"
			  type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
    <property name="configSections" value="databaseSettings"/>
  </object>

  <db:provider id="dbProvider"
			   provider="${db.provider}"
			   connectionString="Server=${db.server};Database=${db.database};User ID=${db.username};Password=${db.password}"/>


  <object name="MySessionFactory" type="Spring.Data.NHibernate.LocalSessionFactoryObject, Spring.Data.NHibernate30">
    <property name="DbProvider" ref="dbProvider"/>
    <property name="MappingAssemblies" value="${MappingAssemblies}">
    </property>
    <property name="HibernateProperties">
      <dictionary>

        <entry key="proxyfactory.factory_class" value="NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle" />
        <!--<entry key="cache.provider_class" value="NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache" />
        <entry key="cache.use_second_level_cache" value="true" />-->
        <!--<entry key="show_sql" value="true" />-->
        <entry key="hbm2ddl.keywords"  value="none" />
        <!--<entry key="hbm2ddl.auto" value="create" />-->
        <!--<entry key="use_outer_join" value="true" />-->
        <entry key="command_timeout" value="120" />
        <entry key="query.substitutions" value="true 1, false 0, yes 'Y', no 'N'" />
        <!--<entry key="cache.use_query_cache" value="true" />-->
        <entry key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
        <!--<entry key="dialect"  value="NHibernate.Dialect.MySQL5Dialect"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.MySqlDataDriver"/>-->
        <!--<entry key="dialect"  value="NHibernate.Dialect.MsSql2005Dialect"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.SqlClientDriver"/>-->
        <entry key="dialect" value="${db.dialect}"/>
        <entry key="show_sql" value="false" />
        <entry key="connection.driver_class" value="${db.driver_class}"/>
        <entry key="adonet.batch_size" value="100" />
        <entry key="hibernate.current_session_context_class"
                 value="Spring.Data.NHibernate.SpringSessionContext, Spring.Data.NHibernate30"/>
      </dictionary>
    </property>
    <property name="ExposeTransactionAwareSessionFactory" value="true" />
  </object>




  <!-- Transaction Management Strategy - local database transactions -->
  <object id="transactionManager"
        type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate30">
    <property name="DbProvider" ref="dbProvider"/>
    <property name="SessionFactory" ref="MySessionFactory">
    </property>
  </object>

    <!--<object id="TransactionInterceptor"
            type="Spring.Transaction.Interceptor.TransactionInterceptor, Spring.Data">
        <property name="TransactionManager" ref="transactionManager" />
        <property name="TransactionAttributeSource">
            <object type="Spring.Transaction.Interceptor.AttributesTransactionAttributeSource, Spring.Data" />
        </property>
    </object>-->

    <!--<object id="transactionManager"
              type="Spring.Data.Core.TxScopeTransactionManager, Spring.Data">
    </object>-->


    <!-- Exception translation object post processor -->
  <object type="Spring.Dao.Attributes.PersistenceExceptionTranslationPostProcessor, Spring.Data"/>

  <tx:attribute-driven/>
    
  
  <object id="HibernateTemplate" 
          type="Spring.Data.NHibernate.Generic.HibernateTemplate, Spring.Data.NHibernate30"
          autowire="constructor">
    <property name="SessionFactory" ref="MySessionFactory" />
  </object>


  <object name="EventAggregator" type="ZxdFramework.Events.EventAggregator, ZxdFramework.Net" singleton="true" />

    <object name="encrypt" type="ZxdFramework.DESEncrypt, ZxdFramework.Net" >
        <property name="EncryptyKey" value="lemsunck" />
    </object>


    <aop:config>
        <aop:advisor pointcut-ref="EventPublishAdvisor" advice-ref="EventPublishAdvice"/>
    </aop:config>

    <object id="EventPublishAdvice" type="ZxdFramework.Events.EventPublishAdvice, ZxdFramework.Net" />

    <object id="EventPublishAdvisor" type="Spring.Aop.Support.AttributeMatchMethodPointcutAdvisor, Spring.Aop">
        <property name="Attribute" value="ZxdFramework.Events.EventPublishAttribute, ZxdFramework.Net" />
    </object>

    <import resource="assembly://ZxdFramework.Net/ZxdFramework.Config/Dao-Context.config"/>
  
</objects>